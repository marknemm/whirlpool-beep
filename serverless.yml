# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: wpnpc
# "app" enables Serverless Framework Dashboard features and sharing them with other Services.
app: whirlpool-beep
# "service" is the name of this project. This will also be added to your AWS resource names.
service: whirlpool-beep

provider:
  name: aws
  runtime: nodejs20.x
  timeout: 900 # (15 min) Maximum execution time for all functions in seconds
  layers:
    # Use AWS Lambda Extension for loading secrets and parameters from AWS SSM Parameter Store when running on AWS
    - arn:aws:lambda:us-east-1:177933569100:layer:AWS-Parameters-and-Secrets-Lambda-Extension:11
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ssm:GetParameter
          Resource: arn:aws:ssm:us-east-1:211125566448:parameter/whirlpool-beep/${sls:stage}/*
        - Effect: Allow
          Action:
            - kms:Decrypt
          Resource: arn:aws:ssm:us-east-1:211125566448:parameter/whirlpool-beep/${sls:stage}/*
  environment: # Hardcoded public environment variables for deployment and loading ENV variables from AWS SSM Parameter Store
    ENV_PARAMS: CHAIN_ID,COMPUTE_LIMIT_MARGIN,DB_CA,DB_HOST,DB_NAME,DB_PORT,DB_SSL,DB_USER,HELIUS_API,INCREASE_LIQUIDITY,INCREASE_LIQUIDITY_UNIT,LOG_BREAK_LEN,LOG_COLOR,LOG_DEPTH,LOG_LEVEL,LOG_TIMESTAMP,PRIORITY_LEVEL_DEFAULT,PRIORITY_FEE_MAX_LAMPORTS,PRIORITY_FEE_MIN_LAMPORTS,RETRY_BASE_DELAY,RETRY_MAX_DELAY,RETRY_MAX_RETRIES,RPC_MAX_RETRIES,TOKEN_LIST_API,TOKEN_PRICE_API,WALLET_ADDRESS,WHIRLPOOL_CONFIG_ADDRESS,WHIRLPOOL_CONFIG_EXTENSION_ADDRESS
    ENV_SECURE_PARAMS: DB_PASSWORD,HELIUS_API_KEY,RPC_ENDPOINT,WALLET_PRIVATE_KEY
    INCREASE_LIQUIDITY: 25
    INCREASE_LIQUIDITY_UNIT: usd
    NODE_ENV: ${sls:stage}
    PARAMETERS_SECRETS_EXTENSION_CACHE_ENABLED: TRUE
    SECRETS_MANAGER_TTL: 300
    SSM_PARAMETER_STORE_TTL: 300

plugins:
  - serverless-plugin-common-excludes # Exclude common unwanted files from deployment package (e.g. README.md, .gitignore, etc.)

build:                      # Config for building functions before packaging and deploying to AWS
  esbuild:
    bundle: true            # Bundle all functions into a single file
    minify: true            # Minify the output
    sourcemap:
      type: inline          # Inline sourcemaps for debugging
      setNodeOptions: true  # Set NODE_OPTIONS=--enable-source-maps to enable sourcemaps on AWS Lambda for debugging

package:                    # Config for packaging service for upload to AWS S3 and deployment to AWS Lambda
  exclude:
    - node_modules          # Exclude node_modules from deployment package; install dependencies separately
    - .env*                 # Exclude local .env files; use AWS SSM Parameter Store for deployment

functions:
  rebalance:
    handler: src/functions/position.rebalance
    events:
      - schedule: rate(15 minutes)
